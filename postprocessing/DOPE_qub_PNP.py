import numpy as np
import cv2 as cv
from plyfile import PlyData
import matplotlib.pyplot as plt
import math 
_ZEROANGLES = 1E-10

def load3DModel(modelpath):
    
    data = PlyData.read(modelpath)

    x = np.array(data['vertex']['x'])/10
    y = np.array(data['vertex']['y'])/10
    z = np.array(data['vertex']['z'])/10
    points = np.column_stack((x, y, z))

    return points

def _clamp(minn, maxn, number):
    if number > maxn:
        return maxn
    elif number < minn:
        return minn
    else: return number 

def quat2vec(q):  # q[4] , r[3]

    r = np.zeros(3)
    mag = q[0]*q[0] + q[1]*q[1] + q[2]*q[2] + q[3]*q[3]
    if mag < 0.99999 or mag > 1.00001:  # normalize
        mag = 1.0/math.sqrt(mag)
        q[0] *= mag
        q[1] *= mag
        q[2] *= mag
        q[3] *= mag

    th = math.acos(_clamp(-1.0, 1.0, q[0]))
    s = math.sin(th)
    if abs(s) > _ZEROANGLES:
        th = 2.0*th
        s = th/s
        r[0] = q[1]*s
        r[1] = q[2]*s
        r[2] = q[3]*s

    else:
        r[0] = r[1] = r[2] = 0.0  # s close to zero

    return r
modelpath = "/home/foto1/linux_part/athena/isaac/dope_fork/3d_models/phase_II_objects/models12/obj_000001.ply"
imgpath = "/home/foto1/linux_part/athena/isaac/dope_fork/datasets/epos_sample_test/000048.png"
# points_3D = np.array([[  79.49984741  ,124.2697525   ,-37.09790039],
#  [  79.49984741 , 124.2697525   , 37.09790039],
#  [ -79.49984741 , 124.2697525   , 37.09790039],
#  [ -79.49984741 , 124.2697525   ,-37.09790039],
#  [  79.49984741 ,-124.2697525   ,-37.09790039],
#  [  79.49984741 ,-124.2697525    ,37.09790039],
#  [ -79.49984741 ,-124.2697525    ,37.09790039],
#  [ -79.49984741 ,-124.2697525   ,-37.09790039],
#  [  18.61763246  ,  6.76022065    ,1.25508838]] ).reshape(-1,3) bb we calculated

points_2D_gt = np.array([
                [605.2860770959938,119.08332358952686],
                [577.6595390196597,113.3130272672194],
                [512.9097250732864,245.20495755659894],
                [543.7964724588015,239.1052787043335],
                [789.7347056562941,243.17489769574937],
                [780.8940898634863,250.6637406544419],
                [693.7440264934177,375.1029407683921],
                [709.6314316482853,357.1022118129264],
                [651.7442110226884,226.35262080202583]
            ]).reshape(-1,2)

# points_2D =   np.array([[446.8572755710199,150.3867111498704],
#                 [515.3941184160616,11.512650536319256],
#                 [417.41355300743083,116.93203585701033],
#                 [342.9919095586238,298.1313030526258],
#                 [503.2550864879097,183.0632451898672],
#                 [585.8953209634074,54.314082861677264],
#                 [546.5523973782202,192.07785037388533],
#                 [431.5283975227343,346.64694205679683],
#                 [477.4410031307124,163.17640858508022]
#             ]).reshape(-1,2)

# points_2D =  np.array([[812.56801891, 186.2787495 ],
#  [725.18791676, 231.64778296],
#  [608.37145325, 241.82808867],
#  [679.41956889, 207.49184253],
#  [899.51113192, 499.23274524],
#  [832.87791731, 555.25890183],
#  [707.10921903, 489.15207952],
#  [764.5292533,  448.42898496],
#  [761.27069129, 363.07223947]]).reshape(-1,2)

# points_2D = np.array([[
#                     917.8033161743382,
#                     90.45121122362303
#                 ],
#                 [
#                     407.8800744409805,
#                     447.7631323692482
#                 ],
#                 [
#                     575.8361433914924,
#                     340.9797021158142
#                 ],
#                 [
#                     780.7411982619682,
#                     198.11984566720938
#                 ],
#                 [
#                     1079.709818979982,
#                     347.86595052744826
#                 ],
#                 [
#                     562.6788586259813,
#                     656.9693307849725
#                 ],
#                 [
#                     639.56859774506,
#                     431.6086310127985
#                 ],
#                 [
#                     845.6841620874355,
#                     296.70085002073233
#                 ],
#                 [
#                     711.9647420846543,
#                     342.8401195020448
#                 ]]).reshape(-1,2)

# points_3D = np.array([[  7.949985, -12.426975,   3.70979 ],
#  [ -7.949985, -12.426975,   3.70979 ],
#  [ -7.949985, 12.426975,   3.70979 ],
#  [  7.949985,  12.426975,   3.70979 ],
#  [  7.949985, -12.426975,  -3.70979 ],
#  [ -7.949985, -12.426975,  -3.70979 ],
#  [ -7.949985,  12.426975,  -3.70979 ],
#  [  7.949985,  12.426975,  -3.70979 ],
#  [  0.0,         0.0,         0.0      ]]
# ).reshape(-1,3)

# print(points_3D.shape)

# points_3D = np.array([[  79.49984741,  124.2697525,   -37.09790039],
#  [  79.49984741,  124.2697525,    37.09790039],
#  [ -79.49984741 , 124.2697525  ,  37.09790039],
#  [ -79.49984741,  124.2697525,   -37.09790039],
#  [  79.49984741, -124.2697525,   -37.09790039],
#  [  79.49984741, -124.2697525,    37.09790039],
#  [ -79.49984741, -124.2697525 ,   37.09790039],
#  [ -79.49984741, -124.2697525,   -37.09790039],
#  [ 18.61763246,    6.76022065,    1.25508838]]
# ).reshape(-1,3)
#18.61763246,    6.76022065,    1.25508838

# points_3Dcv = np.array([[  7.949985,  12.426975,   3.70979 ],
#  [ -7.949985,  12.426975,   3.70979 ],
#  [ -7.949985,  12.426975,  -3.70979 ],
#  [  7.949985,  12.426975,  -3.70979 ],
#  [  7.949985, -12.426975,   3.70979 ],
#  [ -7.949985, -12.426975,   3.70979 ],
#  [ -7.949985, -12.426975,  -3.70979 ],
#  [  7.949985, -12.426975,  -3.70979 ],
#  [  0.0,         0.0,         0.0      ]]).reshape(-1,3) flipped axes centroid 0

# points_2Dcv = np.array([[811.42725942, 140.96038735],
#  [733.25097356, 189.55617322],
#  [609.69001248, 219.46559433],
#  [713.628635,   167.10029046],
#  [871.80276992, 450.48552497],
#  [828.79472562, 586.98941276],
#  [719.57155977, 574.95231896],
#  [783.90301839, 450.83605037],
#  [765.70705407, 356.97529237]]
# ).reshape(-1,2)

# points3D = np.array([[  9.81174825,  13.10299707,   3.83529884],
#  [ -6.08822175,  13.10299707,   3.83529884],
#  [ -6.08822175,  13.10299707,  -3.58428116],
#  [  9.81174825,  13.10299707,  -3.58428116],
#  [  9.81174825, -11.75095294,   3.83529884],
#  [ -6.08822175, -11.75095294,   3.83529884],
#  [  9.81174825, -11.75095294,  -3.58428116],
#  [  1.86176325,   0.67602206,   0.12550884]]
# ).reshape(-1,3)

# points2D = np.array([[600.1242163,  176.74105866],
#  [578.16747447, 137.93402829],
#  [531.94087527, 194.38088478],
#  [562.72475092, 221.87875694],
#  [748.81945809, 304.18404171],
#  [763.37614804, 296.42606197],
#  [714.70514118, 351.94923911],
#  [709.84071307, 348.72265066],
#  [651.12009741, 254.71996788]]).reshape(-1,2)

# points_3D = np.array([[  9.81174825, -11.75095294,   3.83529884],
#  [ -6.08822175, -11.75095294,   3.83529884],
#  [ -6.08822175,  13.10299707,   3.83529884],
#  [  9.81174825,  13.10299707,   3.83529884],
#  [  9.81174825, -11.75095294,  -3.58428116],
#  [ -6.08822175, -11.75095294,  -3.58428116],
#  [ -6.08822175,  13.10299707,  -3.58428116],
#  [  9.81174825,  13.10299707,  -3.58428116],
#  [  1.86176325,   0.67602206,   0.12550884]]
# ).reshape(-1,3)

# points_2D = np.array([[ 917.80331617,   90.45121122],
#  [ 407.88007444,  447.76313237],
#  [ 575.83614339 , 340.97970212],
#  [ 780.74119826,  198.11984567],
#  [1079.70981898,  347.86595053],
#  [ 562.67885863,  656.96933078],
#  [ 639.56859775,  431.60863101],
#  [ 845.68416209,  296.70085002],
#  [ 711.96474208 , 342.8401195 ]]
# ).reshape(-1,2)

# points_3D = np.array([[  7.949985, -12.426975,   3.70979 ],
#  [ -7.949985, -12.426975,   3.70979 ],
#  [ -7.949985,  12.426975 ,  3.70979 ],
#  [  7.949985,  12.426975,   3.70979 ],
#  [  7.949985, -12.426975,  -3.70979 ],
#  [ -7.949985, -12.426975,  -3.70979 ],
#  [ -7.949985,  12.426975,  -3.70979 ],
#  [  7.949985,  12.426975,  -3.70979 ],
#  [  0.0 ,        0.0   ,      0.0      ]]
# ).reshape(-1,3)

# points_2D = np.array([  [
#                     917.8033161743382,
#                     90.45121122362303
#                 ],
#                 [
#                     407.8800744409805,
#                     447.7631323692482
#                 ],
#                 [
#                     575.8361433914924,
#                     340.9797021158142
#                 ],
#                 [
#                     780.7411982619682,
#                     198.11984566720938
#                 ],
#                 [
#                     1079.709818979982,
#                     347.86595052744826
#                 ],
#                 [
#                     562.6788586259813,
#                     656.9693307849725
#                 ],
#                 [
#                     639.56859774506,
#                     431.6086310127985
#                 ],
#                 [
#                     845.6841620874355,
#                     296.70085002073233
#                 ],
#                 [
#                     711.9647420846543,
#                     342.8401195020448
#                 ]]).reshape(-1,2)
K = np.array([634.364, 0.0, 637.801, 0.0, 633.635, 364.958, 0.0, 0.0, 1.0]).reshape(3,3) #s/ 1.40625
print(K)

# _, rvec, tvec = cv.solvePnP(objectPoints=points_3D, 
#                                             imagePoints=points_2D, 
#                                             cameraMatrix=K, 
#                                             distCoeffs=None)
points_2D = np.array([
                [
                    846.6471220611728,
                    256.02610771507204
                ],
                [
                    607.3932571077772,
                    347.0158731405768
                ],
                [
                    366.27355860884825,
                    311.39466929588235
                ],
                [
                    963.621772082163,
                    55.39353356684933
                ],
                [
                    891.3192062649159,
                    371.4656532586903
                ],
                [
                    644.9242337156661,
                    454.85668201951296
                ],
                [
                    449.50123955775166,
                    575.2770201245858
                ],
                [
                    1094.3817021781324,
                    369.8822282215447
                ],
                [
                    726.499364030926,
                    352.6084545678897
                ]
            ]).reshape(-1,2)

points_3D = np.array([[  7.949985,  12.426975,   3.70979 ],
 [ -7.949985,  12.426975,   3.70979 ],
 [ -7.949985, -12.426975,   3.70979 ],
 [  7.949985, -12.426975,   3.70979 ],
 [  7.949985,  12.426975,  -3.70979 ],
 [ -7.949985,  12.426975,  -3.70979 ],
 [ -7.949985, -12.426975,  -3.70979 ],
 [  7.949985, -12.426975,  -3.70979 ],
 [  0.0,         0.0,         0.0      ]]).reshape(-1,3)
q = np.array([
                0.6750881022521134,
                -0.04571715955030714,
                -0.19638729518128165,
                0.7096464090035772
            ])
rvec = quat2vec(q)
rotation_mat,_ = cv.Rodrigues(rvec)
RT = np.eye(4)
tvec = np.array( [
                3.8414947973766086,
                -0.5354698004630643,
                27.47408063573026
            ])

RT[:3,:3] = rotation_mat
RT[:-1,-1] = tvec.reshape(3,)
#print(tvec)

print('RT\n', RT)
print(rotation_mat,tvec)


modelPoints = load3DModel(modelpath)
    

tpoints = [ K @ RT[:3,:] @ np.append(i,[1]).reshape(4,1) for i in modelPoints] 


tpoints = np.array([i/i[-1] for i in tpoints])


cuboid = [ K @ RT[:3,:] @ np.append(i,[1]).reshape(4,1) for i in points_3D] 
cuboid = np.array([i/i[-1] for i in cuboid])
print(list(cuboid))

img = cv.imread(imgpath)
img = cv.cvtColor(img,cv.COLOR_BGR2RGB)


#img = cv.resize(img,(int(1280 / (720/512)),512))


plt.imshow(img)
plt.scatter(tpoints[:,0],tpoints[:,1],marker='x',color='red',s=0.002)

# #plt.scatter(points_2D_gt[:,0],points_2D_gt[:,1],marker='o',color='yellow')

plt.scatter(points_2D[:,0],points_2D[:,1],marker='o',color='yellow')
plt.show()



